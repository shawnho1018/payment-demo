---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-agent
  namespace: bindplane-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bindplane-agent
  labels:
    app.kubernetes.io/name: bindplane-agent
rules:
- apiGroups:
  - ""
  resources:
  - events
  - namespaces
  - namespaces/status
  - nodes
  - nodes/spec
  - nodes/stats
  - nodes/proxy
  - pods
  - pods/status
  - replicationcontrollers
  - replicationcontrollers/status
  - resourcequotas
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - autoscaling
  resources:
    - horizontalpodautoscalers
  verbs:
    - get
    - list
    - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: bindplane-agent
  labels:
    app.kubernetes.io/name: bindplane-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bindplane-agent
subjects:
- kind: ServiceAccount
  name: bindplane-agent
  namespace: bindplane-agent
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
  name: bindplane-node-agent
  namespace: bindplane-agent
spec:
  ports:
  - appProtocol: grpc
    name: otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - appProtocol: http
    name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  selector:
    app.kubernetes.io/name: bindplane-agent
    app.kubernetes.io/component: node
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: bindplane-agent
    app.kubernetes.io/component: node
  name: bindplane-node-agent-headless
  namespace: bindplane-agent
spec:
  clusterIP: None
  ports:
  - appProtocol: grpc
    name: otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - appProtocol: http
    name: otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  selector:
    app.kubernetes.io/name: bindplane-agent
    app.kubernetes.io/component: node
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bindplane-node-agent-setup
  labels:
    app.kubernetes.io/name: bindplane-agent
    app.kubernetes.io/component: node
  namespace: bindplane-agent
data:
  # This script assumes it is running in /etc/otel.
  setup.sh: |
    # Configure storage/ emptyDir volume permissions so the
    # manager configuration can ge written to it.
    chown 10005:10005 storage/

    # Copy config and logging configuration files to storage/
    # hostPath volume if they do not already exist.
    if [ ! -f storage/config.yaml ]; then
      echo '
      receivers:
        nop:
      processors:
        batch:
      exporters:
        nop:
      service:
        pipelines:
          metrics:
            receivers: [nop]
            processors: [batch]
            exporters: [nop]
        telemetry:
          metrics:
            level: none
      ' > storage/config.yaml
    fi
    if [ ! -f storage/logging.yaml ]; then
      echo '
      output: stdout
      level: info
      ' > storage/logging.yaml
    fi
    chown 10005:10005 storage/config.yaml storage/logging.yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: bindplane-node-agent
  labels:
    app.kubernetes.io/name: bindplane-agent
    app.kubernetes.io/component: node
  namespace: bindplane-agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: bindplane-agent
      app.kubernetes.io/component: node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: bindplane-agent
        app.kubernetes.io/component: node
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "8888"
        prometheus.io/scheme: http
        prometheus.io/job-name: bindplane-node-agent
    spec:
      serviceAccount: bindplane-agent
      initContainers:
        - name: setup
          image: busybox:latest
          securityContext:
            # Required for changing permissions from
            # root to otel user in emptyDir volume.
            runAsUser: 0
          command: ["sh", "/setup/setup.sh"]
          volumeMounts:
            - mountPath: /etc/otel/config
              name: config
            - mountPath: /storage
              name: storage
            - mountPath: "/setup"
              name: setup
      containers:
        - name: opentelemetry-collector
          image: ghcr.io/observiq/bindplane-agent:1.58.3
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            # Required for reading container logs hostPath.
            runAsUser: 0
          ports:
            - containerPort: 8888
              name: prometheus
          resources:
            requests:
              memory: 200Mi
              cpu: 100m
            limits:
              memory: 200Mi
          env:
            - name: OPAMP_ENDPOINT
              value: ws://bindplane.bindplane.svc.cluster.local:3001/v1/opamp
            - name: OPAMP_SECRET_KEY
              value: 01J5VNKS82GXNKD0EEJ19PQ0K9
            - name: OPAMP_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OPAMP_LABELS
              value: configuration=demo,container-platform=kubernetes-daemonset,install_id=730eaa11-7fc8-42d7-b515-83d7f3930faf
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # The collector process updates config.yaml
            # and manager.yaml when receiving changes
            # from the OpAMP server.
            #
            # The config.yaml is persisted by saving it to the
            # hostPath volume, allowing the agent to continue
            # running after restart during an OpAMP server outage.
            #
            # The manager configuration must be re-generated on
            # every startup due to how the bindplane-agent handles
            # manager configuration. It prefers a manager config file
            # over environment variables, meaning it cannot be
            # updated using environment variables, if it is persisted).
            - name: CONFIG_YAML_PATH
              value: /etc/otel/storage/config.yaml
            - name: MANAGER_YAML_PATH
              value: /etc/otel/config/manager.yaml
            - name: LOGGING_YAML_PATH
              value: /etc/otel/storage/logging.yaml
          volumeMounts:
            - mountPath: /etc/otel/config
              name: config
            - mountPath: /run/log/journal
              name: runlog
              readOnly: true
            - mountPath: /var/log
              name: varlog
              readOnly: true
            - mountPath: /var/lib/docker/containers
              name: dockerlogs
              readOnly: true
            - mountPath: /etc/otel/storage
              name: storage
      volumes:
        - name: config
          emptyDir: {}
        - name: runlog
          hostPath:
            path: /run/log/journal
        - name: varlog
          hostPath:
            path: /var/log
        - name: dockerlogs
          hostPath:
            path: /var/lib/docker/containers
        - name: storage
          hostPath:
            path: /var/lib/observiq/otelcol/container
        - name: setup
          configMap:
            name: bindplane-node-agent-setup